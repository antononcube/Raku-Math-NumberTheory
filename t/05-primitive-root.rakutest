use v6.d;
use Test;

use lib <. lib>;
use Math::NumberTheory;

plan *;

## 1
subtest {
    is primitive-root(9), 2;
    is-deeply (1 .. 10).map({ power-mod(2, $_, 9) }).unique.sort.List, (1, 2, 4, 5, 7, 8);
    is primitive-root(10) âˆˆ [3, 7], True;
}, 'primitive-root';

## 2
subtest {
    is primitive-root-list(9), [2, 5];
}, 'primitive-root-list';

## 3
subtest {
    is multiplicative-order(5 ,7), 6, 'standard';
    is multiplicative-order(-5 ,7), 3, 'negative first argument';
    is multiplicative-order(-5 ,7, [3, 11]), 2, 'generalized';
}, 'multiplicative-order';

## 4
subtest {
    is moebius-mu(5), -1, 'standard';
    # Not working because implemented &factor-integer is not implemented for Gaussian integers yet.
    dies-ok {moebius-mu(5 + 6i)}, 'gaussian integer';
    is moebius-mu(-13), -1, 'negative first argument';
    is moebius-mu([3, 11, 8, 678]), (-1, -1, 0, -1), 'generalized';
}, 'meobius-mu';

done-testing;